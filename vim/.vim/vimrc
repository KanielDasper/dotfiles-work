" ****************   
" GENERAL SETTINGS
" ****************
let maplocalleader=","
let mapleader=" "
set signcolumn=yes
set mouse=a
set nocompatible
colorscheme nord

set splitright
set splitbelow

set number
set relativenumber
set scrolloff=99

" Filetype settings
" Detects external changes to a file
syntax on
filetype plugin on
filetype indent on
set fileencoding=UTF-8
set fileencodings=UTF-8
set autoread
au FocusGained,BufEnter * silent! checktime

" Error and undo handling
set noerrorbells visualbell t_vb=
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set undofile
set clipboard=unnamed

" Search completion in the vim terminal
set wildmenu
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx
set showcmd
set showmatch

" Search with / 
set hlsearch
set incsearch
set ignorecase
set smartcase

" Tab and indentation settings
set autoindent
set smartindent
set wrap
set expandtab
set smarttab

set linebreak
set shiftwidth=2
set softtabstop=2
set tabstop=2
set textwidth=79

" Filetype Specific settings ----------------------{{{

augroup filetype_javascript
	autocmd!
	autocmd FileType javascript nnoremap <buffer> <localleader>c I//<esc>
augroup END

augroup filetype_python
	autocmd!
	autocmd FileType python vnoremap <buffer> <localleader>c :s/^/#/<CR>gv
	autocmd FileType python vnoremap <buffer> <localleader>u :s/^#//<CR>gv
augroup END

au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |

" }}}

" Vim plug plug-ins ----------------------------------------{{{
" LSPs here: https://github.com/neoclide/coc.nvim/wiki/Language-servers

call plug#begin()

Plug 'scrooloose/nerdtree'
Plug 'airblade/vim-gitgutter'
Plug 'flazz/vim-colorschemes'
Plug 'benmills/vimux'
Plug 'greghor/vim-pyShell'
Plug 'mhinz/vim-startify'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'ryanoasis/vim-devicons'

call plug#end() 
" GitGutter config for colors

highlight GitGutterDelete guifg=#FF0000 ctermfg=1
highlight GitGutterAdd    guifg=#00FF00 ctermfg=2 
highlight GitGutterDelete guifg=#FF0000 ctermfg=1
highlight GitGutterChange guifg=#FFFF00 ctermfg=3  

" NERDTree config
augroup nerd_tree
	au!
	autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
augroup END

let g:NERDTreeWinPos = "right"
let NERDTreeIgnore = ['\.pyc$', '__pycache__']
map <leader>nn :NERDTreeToggle<cr>
map <leader>nf :NERDTreeFind<cr>

" COC Plugin config
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Use K to show documentation in preview window
nnoremap <silent> K :call ShowDocumentation()<CR>
function! ShowDocumentation()
  if CocAction('hasProvider', 'hover')
    call CocActionAsync('doHover')
  else
    call feedkeys('K', 'in')
  endif
endfunction

"}}}
