" Source all .vim files in the ~/.vim/config directory
 for file in split(glob('~/.vim/config/*.vim'), '\n')
     execute 'source ' . file
     endfor

" ****************   
" GENERAL SETTINGS
" ****************
let maplocalleader=","
let mapleader=" "
set mouse=a
set nocompatible
set termguicolors
colorscheme nord
set splitright
set splitbelow
set number
set relativenumber
set scrolloff=99

" Filetype settings
" Detects external changes to a file
syntax on
filetype plugin on
filetype indent on
set fileencoding=UTF-8
set fileencodings=UTF-8
set autoread
au FocusGained,BufEnter * silent! checktime

" Search completion in the vim terminal
set wildmenu
set wildignore=*.docx,*.jpg,*.png,*.gif,*.pdf,*.pyc,*.exe,*.flv,*.img,*.xlsx
set hlsearch
set incsearch
set showcmd
set showmatch
set undofile

" Tab and indentation settings
set autoindent
set smartindent
set wrap
set expandtab
set smarttab
set shiftwidth=4
set tabstop=4
set linebreak
set textwidth=79

" Filetype Specific settings ----------------------{{{
augroup filetype_javascript
	autocmd!
	autocmd FileType javascript nnoremap <buffer> <localleader>c I//<esc>
augroup END

augroup filetype_python
	autocmd!
	autocmd FileType python vnoremap <buffer> <localleader>c :s/^/#/<CR>gv
	autocmd FileType python vnoremap <buffer> <localleader>u :s/^#//<CR>gv
augroup END
" }}}

" Vim plug plug-ins ----------------------------------------{{{
call plug#begin()

Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'scrooloose/nerdtree'
Plug 'airblade/vim-gitgutter'
Plug 'flazz/vim-colorschemes'
Plug 'benmills/vimux'
Plug 'greghor/vim-pyShell'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'ryanoasis/vim-devicons'
Plug 'mhinz/vim-startify'

call plug#end() 

function! s:on_lsp_buffer_enabled() abort
	setlocal omnifunc=lsp#complete
endfunction

augroup lsp_install
	au!
	autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END


" GitGutter config for colors
highlight GitGutterDelete guifg=#FF0000 ctermfg=1
highlight GitGutterAdd    guifg=#00FF00 ctermfg=2 
highlight GitGutterDelete guifg=#FF0000 ctermfg=1
highlight GitGutterChange guifg=#FFFF00 ctermfg=3  

" NERDTree config
augroup nerd_tree
	au!
	autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
augroup END

let g:NERDTreeWinPos = "right"
let NERDTreeIgnore = ['\.pyc$', '__pycache__']
map <leader>nn :NERDTreeToggle<cr>
map <leader>nf :NERDTreeFind<cr>

"}}}
